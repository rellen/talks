
* Success Typing with Dialyzer

** What is Success Typing?

** Using Dialyzer in Elixir

#+BEGIN_SRC elixir
{:dialyxir, "~> 1.3", only: [:dev], runtime: false}
#+END_SRC

** Type example

#+INCLUDE: "./dialyzer_example/lib/type_example.ex" src elixir :lines 1

** Type example - =wat/2=
#+BEGIN_SRC
lib/type_example.ex:6:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
DialyzerExample.TypeExample.wat/2

Success typing:
@spec wat(number(), number()) :: number()
#+END_SRC


** Type example - =add/2= (=concat/2= similarly)
#+BEGIN_SRC
lib/type_example.ex:9:no_return
Function run_add/0 has no local return.
________________________________________________________________________________
lib/type_example.ex:9:call
The function call will not succeed.
DialyzerExample.TypeExample.add(1, :two)

will never return since the 2nd arguments differ
from the success typing arguments:

(number(), number())

#+END_SRC

** Match example - inexhaustive function clauses

#+INCLUDE: "./dialyzer_example/lib/match_example_a.ex" src elixir :lines 1

** Match example - run in =iex=
#+BEGIN_SRC sh
** (FunctionClauseError) no function clause matching in DialyzerExample.MatchExampleA.handle/1

    The following arguments were given to DialyzerExample.MatchExampleA.handle/1:

        # 1
        {:bar, "bar"}

    Attempted function clauses (showing 1 out of 1):

        def handle({:foo, data})

    lib/match_example_a.ex:8: DialyzerExample.MatchExampleA.handle/1
#+END_SRC

** Match example - call unmatched function clause

#+INCLUDE: "./dialyzer_example/lib/match_example_b.ex" src elixir

** Match example - =mix dialyzer=

#+BEGIN_SRC
lib/match_example_b.ex:12:no_return
Function run/0 has no local return.
________________________________________________________________________________
lib/match_example_b.ex:14:call
The function call will not succeed.

DialyzerExample.MatchExampleB.handle({:bar, <<98, 97, 114>>})

will never return since the 1st arguments differ
from the success typing arguments:

({:foo, _})

________________________________________________________________________________
#+END_SRC

** Example 3 - non-exhaustive case

#+INCLUDE: "./dialyzer_example/lib/case_example.ex" src elixir
